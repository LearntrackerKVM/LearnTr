{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\nfunction CircleProgressComponent__svg_svg_0__svg_linearGradient_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"linearGradient\");\n    i0.ɵɵelement(1, \"stop\", 5)(2, \"stop\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"id\", ctx_r1.svg.outerLinearGradient.id);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", ctx_r1.svg.outerLinearGradient.colorStop1)(\"stop-opacity\", 1);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", ctx_r1.svg.outerLinearGradient.colorStop2)(\"stop-opacity\", 1);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_radialGradient_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"radialGradient\");\n    i0.ɵɵelement(1, \"stop\", 5)(2, \"stop\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"id\", ctx_r2.svg.radialGradient.id);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", ctx_r2.svg.radialGradient.colorStop1)(\"stop-opacity\", 1);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", ctx_r2.svg.radialGradient.colorStop2)(\"stop-opacity\", 1);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\");\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"cx\", ctx_r8.svg.backgroundCircle.cx)(\"cy\", ctx_r8.svg.backgroundCircle.cy)(\"r\", ctx_r8.svg.backgroundCircle.r)(\"fill\", ctx_r8.svg.backgroundCircle.fill)(\"fill-opacity\", ctx_r8.svg.backgroundCircle.fillOpacity)(\"stroke\", ctx_r8.svg.backgroundCircle.stroke)(\"stroke-width\", ctx_r8.svg.backgroundCircle.strokeWidth);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\");\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵattributeInterpolate2(\"fill\", \"url(\", ctx_r9.window.location.href, \"#\", ctx_r9.svg.radialGradient.id, \")\");\n    i0.ɵɵattribute(\"cx\", ctx_r9.svg.backgroundCircle.cx)(\"cy\", ctx_r9.svg.backgroundCircle.cy)(\"r\", ctx_r9.svg.backgroundCircle.r)(\"fill-opacity\", ctx_r9.svg.backgroundCircle.fillOpacity)(\"stroke\", ctx_r9.svg.backgroundCircle.stroke)(\"stroke-width\", ctx_r9.svg.backgroundCircle.strokeWidth);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_1_Template, 1, 7, \"circle\", 2)(2, CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_2_Template, 1, 8, \"circle\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.options.backgroundGradient);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.options.backgroundGradient);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_circle_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"cx\", ctx_r4.svg.circle.cx)(\"cy\", ctx_r4.svg.circle.cy)(\"r\", ctx_r4.svg.circle.r)(\"fill\", ctx_r4.svg.circle.fill)(\"stroke\", ctx_r4.svg.circle.stroke)(\"stroke-width\", ctx_r4.svg.circle.strokeWidth);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\");\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"d\", ctx_r10.svg.path.d)(\"stroke\", ctx_r10.svg.path.stroke)(\"stroke-width\", ctx_r10.svg.path.strokeWidth)(\"stroke-linecap\", ctx_r10.svg.path.strokeLinecap)(\"fill\", ctx_r10.svg.path.fill);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\");\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵattributeInterpolate2(\"stroke\", \"url(\", ctx_r11.window.location.href, \"#\", ctx_r11.svg.outerLinearGradient.id, \")\");\n    i0.ɵɵattribute(\"d\", ctx_r11.svg.path.d)(\"stroke-width\", ctx_r11.svg.path.strokeWidth)(\"stroke-linecap\", ctx_r11.svg.path.strokeLinecap)(\"fill\", ctx_r11.svg.path.fill);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_1_Template, 1, 5, \"path\", 2)(2, CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_2_Template, 1, 6, \"path\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.options.outerStrokeGradient);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.options.outerStrokeGradient);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tspan_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(4);\n    i0.ɵɵattribute(\"x\", ctx_r15.svg.title.x)(\"y\", ctx_r15.svg.title.y)(\"dy\", tspan_r16.dy)(\"font-size\", ctx_r15.svg.title.fontSize)(\"font-weight\", ctx_r15.svg.title.fontWeight)(\"fill\", ctx_r15.svg.title.color);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(tspan_r16.span);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1__svg_tspan_1_Template, 2, 7, \"tspan\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.svg.title.tspans);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7__svg_tspan_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"font-size\", ctx_r13.svg.units.fontSize)(\"font-weight\", ctx_r13.svg.units.fontWeight)(\"fill\", ctx_r13.svg.units.color);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r13.svg.units.text);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tspan_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵattribute(\"x\", ctx_r17.svg.subtitle.x)(\"y\", ctx_r17.svg.subtitle.y)(\"dy\", tspan_r18.dy)(\"font-size\", ctx_r17.svg.subtitle.fontSize)(\"font-weight\", ctx_r17.svg.subtitle.fontWeight)(\"fill\", ctx_r17.svg.subtitle.color);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(tspan_r18.span);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3__svg_tspan_1_Template, 2, 7, \"tspan\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.svg.subtitle.tspans);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7);\n    i0.ɵɵtemplate(1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1_Template, 2, 1, \"ng-container\", 2)(2, CircleProgressComponent__svg_svg_0__svg_text_7__svg_tspan_2_Template, 2, 4, \"tspan\", 2)(3, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r6.svg.circle.cx)(\"y\", ctx_r6.svg.circle.cy)(\"text-anchor\", ctx_r6.svg.title.textAnchor);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.options.showTitle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.options.showUnits);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.options.showSubtitle);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0__svg_image_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"image\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"height\", ctx_r7.svg.image.height)(\"width\", ctx_r7.svg.image.width)(\"href\", ctx_r7.svg.image.src, null, \"xlink\")(\"x\", ctx_r7.svg.image.x)(\"y\", ctx_r7.svg.image.y);\n  }\n}\nfunction CircleProgressComponent__svg_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 1);\n    i0.ɵɵlistener(\"click\", function CircleProgressComponent__svg_svg_0_Template__svg_svg_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.emitClickEvent($event));\n    });\n    i0.ɵɵelementStart(1, \"defs\");\n    i0.ɵɵtemplate(2, CircleProgressComponent__svg_svg_0__svg_linearGradient_2_Template, 3, 5, \"linearGradient\", 2)(3, CircleProgressComponent__svg_svg_0__svg_radialGradient_3_Template, 3, 5, \"radialGradient\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CircleProgressComponent__svg_svg_0__svg_ng_container_4_Template, 3, 2, \"ng-container\", 2)(5, CircleProgressComponent__svg_svg_0__svg_circle_5_Template, 1, 6, \"circle\", 2)(6, CircleProgressComponent__svg_svg_0__svg_ng_container_6_Template, 3, 2, \"ng-container\", 2)(7, CircleProgressComponent__svg_svg_0__svg_text_7_Template, 4, 6, \"text\", 3)(8, CircleProgressComponent__svg_svg_0__svg_image_8_Template, 1, 5, \"image\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"viewBox\", ctx_r0.svg.viewBox)(\"height\", ctx_r0.svg.height)(\"width\", ctx_r0.svg.width)(\"class\", ctx_r0.options.class);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.outerStrokeGradient);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.backgroundGradient);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.showBackground);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.showInnerStroke);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", +ctx_r0.options.percent !== 0 || ctx_r0.options.showZeroOuterStroke);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.options.showImage && (ctx_r0.options.showTitle || ctx_r0.options.showUnits || ctx_r0.options.showSubtitle));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.showImage);\n  }\n}\nclass CircleProgressOptions {\n  constructor() {\n    this.class = '';\n    this.backgroundGradient = false;\n    this.backgroundColor = 'transparent';\n    this.backgroundGradientStopColor = 'transparent';\n    this.backgroundOpacity = 1;\n    this.backgroundStroke = 'transparent';\n    this.backgroundStrokeWidth = 0;\n    this.backgroundPadding = 5;\n    this.percent = 0;\n    this.radius = 90;\n    this.space = 4;\n    this.toFixed = 0;\n    this.maxPercent = 1000;\n    this.renderOnClick = true;\n    this.units = '%';\n    this.unitsFontSize = '10';\n    this.unitsFontWeight = 'normal';\n    this.unitsColor = '#444444';\n    this.outerStrokeGradient = false;\n    this.outerStrokeWidth = 8;\n    this.outerStrokeColor = '#78C000';\n    this.outerStrokeGradientStopColor = 'transparent';\n    this.outerStrokeLinecap = 'round';\n    this.innerStrokeColor = '#C7E596';\n    this.innerStrokeWidth = 4;\n    this.titleFormat = undefined;\n    this.title = 'auto';\n    this.titleColor = '#444444';\n    this.titleFontSize = '20';\n    this.titleFontWeight = 'normal';\n    this.subtitleFormat = undefined;\n    this.subtitle = 'progress';\n    this.subtitleColor = '#A9A9A9';\n    this.subtitleFontSize = '10';\n    this.subtitleFontWeight = 'normal';\n    this.imageSrc = undefined;\n    this.imageHeight = 0;\n    this.imageWidth = 0;\n    this.animation = true;\n    this.animateTitle = true;\n    this.animateSubtitle = false;\n    this.animationDuration = 500;\n    this.showTitle = true;\n    this.showSubtitle = true;\n    this.showUnits = true;\n    this.showImage = false;\n    this.showBackground = true;\n    this.showInnerStroke = true;\n    this.clockwise = true;\n    this.responsive = false;\n    this.startFromZero = true;\n    this.showZeroOuterStroke = true;\n    this.lazy = false;\n  }\n}\nclass CircleProgressComponent {\n  constructor(defaultOptions, ngZone, elRef, injector) {\n    this.ngZone = ngZone;\n    this.elRef = elRef;\n    this.onClick = new EventEmitter();\n    // <svg> of component\n    this.svgElement = null;\n    // whether <svg> is in viewport\n    this.isInViewport = false;\n    // event for notifying viewport change caused by scrolling or resizing\n    this.onViewportChanged = new EventEmitter();\n    this._viewportChangedSubscriber = null;\n    this.options = new CircleProgressOptions();\n    this.defaultOptions = new CircleProgressOptions();\n    this._lastPercent = 0;\n    this._gradientUUID = null;\n    this.render = () => {\n      this.applyOptions();\n      if (this.options.lazy) {\n        // Draw svg if it doesn't exist\n        this.svgElement === null && this.draw(this._lastPercent);\n        // Draw it only when it's in the viewport\n        if (this.isInViewport) {\n          // Draw it at the latest position when I am in.\n          if (this.options.animation && this.options.animationDuration > 0) {\n            this.animate(this._lastPercent, this.options.percent);\n          } else {\n            this.draw(this.options.percent);\n          }\n          this._lastPercent = this.options.percent;\n        }\n      } else {\n        if (this.options.animation && this.options.animationDuration > 0) {\n          this.animate(this._lastPercent, this.options.percent);\n        } else {\n          this.draw(this.options.percent);\n        }\n        this._lastPercent = this.options.percent;\n      }\n    };\n    this.polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n      let angleInRadius = angleInDegrees * Math.PI / 180;\n      let x = centerX + Math.sin(angleInRadius) * radius;\n      let y = centerY - Math.cos(angleInRadius) * radius;\n      return {\n        x: x,\n        y: y\n      };\n    };\n    this.draw = percent => {\n      // make percent reasonable\n      percent = percent === undefined ? this.options.percent : Math.abs(percent);\n      // circle percent shouldn't be greater than 100%.\n      let circlePercent = percent > 100 ? 100 : percent;\n      // determine box size\n      let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\n      if (this.options.showBackground) {\n        boxSize += this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2);\n      }\n      // the centre of the circle\n      let centre = {\n        x: boxSize / 2,\n        y: boxSize / 2\n      };\n      // the start point of the arc\n      let startPoint = {\n        x: centre.x,\n        y: centre.y - this.options.radius\n      };\n      // get the end point of the arc\n      let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ? circlePercent : 100 - circlePercent) / 100); // ####################\n      // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\n      if (circlePercent === 100) {\n        endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\n      }\n      // largeArcFlag and sweepFlag\n      let largeArcFlag, sweepFlag;\n      if (circlePercent > 50) {\n        [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\n      } else {\n        [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\n      }\n      // percent may not equal the actual percent\n      let titlePercent = this.options.animateTitle ? percent : this.options.percent;\n      let titleTextPercent = titlePercent > this.options.maxPercent ? `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\n      let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\n      // get title object\n      let title = {\n        x: centre.x,\n        y: centre.y,\n        textAnchor: 'middle',\n        color: this.options.titleColor,\n        fontSize: this.options.titleFontSize,\n        fontWeight: this.options.titleFontWeight,\n        texts: [],\n        tspans: []\n      };\n      // from v0.9.9, both title and titleFormat(...) may be an array of string.\n      if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\n        let formatted = this.options.titleFormat(titlePercent);\n        if (formatted instanceof Array) {\n          title.texts = [...formatted];\n        } else {\n          title.texts.push(formatted.toString());\n        }\n      } else {\n        if (this.options.title === 'auto') {\n          title.texts.push(titleTextPercent);\n        } else {\n          if (this.options.title instanceof Array) {\n            title.texts = [...this.options.title];\n          } else {\n            title.texts.push(this.options.title.toString());\n          }\n        }\n      }\n      // get subtitle object\n      let subtitle = {\n        x: centre.x,\n        y: centre.y,\n        textAnchor: 'middle',\n        color: this.options.subtitleColor,\n        fontSize: this.options.subtitleFontSize,\n        fontWeight: this.options.subtitleFontWeight,\n        texts: [],\n        tspans: []\n      };\n      // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\n      if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\n        let formatted = this.options.subtitleFormat(subtitlePercent);\n        if (formatted instanceof Array) {\n          subtitle.texts = [...formatted];\n        } else {\n          subtitle.texts.push(formatted.toString());\n        }\n      } else {\n        if (this.options.subtitle instanceof Array) {\n          subtitle.texts = [...this.options.subtitle];\n        } else {\n          subtitle.texts.push(this.options.subtitle.toString());\n        }\n      }\n      // get units object\n      let units = {\n        text: `${this.options.units}`,\n        fontSize: this.options.unitsFontSize,\n        fontWeight: this.options.unitsFontWeight,\n        color: this.options.unitsColor\n      };\n      // get total count of text lines to be shown\n      let rowCount = 0,\n        rowNum = 1;\n      this.options.showTitle && (rowCount += title.texts.length);\n      this.options.showSubtitle && (rowCount += subtitle.texts.length);\n      // calc dy for each tspan for title\n      if (this.options.showTitle) {\n        for (let span of title.texts) {\n          title.tspans.push({\n            span: span,\n            dy: this.getRelativeY(rowNum, rowCount)\n          });\n          rowNum++;\n        }\n      }\n      // calc dy for each tspan for subtitle\n      if (this.options.showSubtitle) {\n        for (let span of subtitle.texts) {\n          subtitle.tspans.push({\n            span: span,\n            dy: this.getRelativeY(rowNum, rowCount)\n          });\n          rowNum++;\n        }\n      }\n      // create ID for gradient element\n      if (null === this._gradientUUID) {\n        this._gradientUUID = this.uuid();\n      }\n      // Bring it all together\n      this.svg = {\n        viewBox: `0 0 ${boxSize} ${boxSize}`,\n        // Set both width and height to '100%' if it's responsive\n        width: this.options.responsive ? '100%' : boxSize,\n        height: this.options.responsive ? '100%' : boxSize,\n        backgroundCircle: {\n          cx: centre.x,\n          cy: centre.y,\n          r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\n          fill: this.options.backgroundColor,\n          fillOpacity: this.options.backgroundOpacity,\n          stroke: this.options.backgroundStroke,\n          strokeWidth: this.options.backgroundStrokeWidth\n        },\n        path: {\n          // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\n          d: `M ${startPoint.x} ${startPoint.y}\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\n          stroke: this.options.outerStrokeColor,\n          strokeWidth: this.options.outerStrokeWidth,\n          strokeLinecap: this.options.outerStrokeLinecap,\n          fill: 'none'\n        },\n        circle: {\n          cx: centre.x,\n          cy: centre.y,\n          r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\n          fill: 'none',\n          stroke: this.options.innerStrokeColor,\n          strokeWidth: this.options.innerStrokeWidth\n        },\n        title: title,\n        units: units,\n        subtitle: subtitle,\n        image: {\n          x: centre.x - this.options.imageWidth / 2,\n          y: centre.y - this.options.imageHeight / 2,\n          src: this.options.imageSrc,\n          width: this.options.imageWidth,\n          height: this.options.imageHeight\n        },\n        outerLinearGradient: {\n          id: 'outer-linear-' + this._gradientUUID,\n          colorStop1: this.options.outerStrokeColor,\n          colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor\n        },\n        radialGradient: {\n          id: 'radial-' + this._gradientUUID,\n          colorStop1: this.options.backgroundColor,\n          colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor\n        }\n      };\n    };\n    this.getAnimationParameters = (previousPercent, currentPercent) => {\n      const MIN_INTERVAL = 10;\n      let times, step, interval;\n      let fromPercent = this.options.startFromZero ? 0 : previousPercent < 0 ? 0 : previousPercent;\n      let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\n      let delta = Math.abs(Math.round(toPercent - fromPercent));\n      if (delta >= 100) {\n        // we will finish animation in 100 times\n        times = 100;\n        if (!this.options.animateTitle && !this.options.animateSubtitle) {\n          step = 1;\n        } else {\n          // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\n          step = Math.round(delta / times);\n        }\n      } else {\n        // we will finish in as many times as the number of percent.\n        times = delta;\n        step = 1;\n      }\n      // Get the interval of timer\n      interval = Math.round(this.options.animationDuration / times);\n      // Readjust all values if the interval of timer is extremely small.\n      if (interval < MIN_INTERVAL) {\n        interval = MIN_INTERVAL;\n        times = this.options.animationDuration / interval;\n        if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\n          step = Math.round(100 / times);\n        } else {\n          step = Math.round(delta / times);\n        }\n      }\n      // step must be greater than 0.\n      if (step < 1) {\n        step = 1;\n      }\n      return {\n        times: times,\n        step: step,\n        interval: interval\n      };\n    };\n    this.animate = (previousPercent, currentPercent) => {\n      if (this._timerSubscription && !this._timerSubscription.closed) {\n        this._timerSubscription.unsubscribe();\n      }\n      let fromPercent = this.options.startFromZero ? 0 : previousPercent;\n      let toPercent = currentPercent;\n      let {\n        step: step,\n        interval: interval\n      } = this.getAnimationParameters(fromPercent, toPercent);\n      let count = fromPercent;\n      if (fromPercent < toPercent) {\n        this._timerSubscription = timer(0, interval).subscribe(() => {\n          count += step;\n          if (count <= toPercent) {\n            if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\n              this.draw(toPercent);\n              this._timerSubscription.unsubscribe();\n            } else {\n              this.draw(count);\n            }\n          } else {\n            this.draw(toPercent);\n            this._timerSubscription.unsubscribe();\n          }\n        });\n      } else {\n        this._timerSubscription = timer(0, interval).subscribe(() => {\n          count -= step;\n          if (count >= toPercent) {\n            if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\n              this.draw(toPercent);\n              this._timerSubscription.unsubscribe();\n            } else {\n              this.draw(count);\n            }\n          } else {\n            this.draw(toPercent);\n            this._timerSubscription.unsubscribe();\n          }\n        });\n      }\n    };\n    this.applyOptions = () => {\n      // the options of <circle-progress> may change already\n      for (let name of Object.keys(this.options)) {\n        if (this.hasOwnProperty(name) && this[name] !== undefined) {\n          this.options[name] = this[name];\n        } else if (this.templateOptions && this.templateOptions[name] !== undefined) {\n          this.options[name] = this.templateOptions[name];\n        }\n      }\n      // make sure key options valid\n      this.options.radius = Math.abs(+this.options.radius);\n      this.options.space = +this.options.space;\n      this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\n      this.options.maxPercent = Math.abs(+this.options.maxPercent);\n      this.options.animationDuration = Math.abs(this.options.animationDuration);\n      this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\n      this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\n      this.options.backgroundPadding = +this.options.backgroundPadding;\n    };\n    this.getRelativeY = (rowNum, rowCount) => {\n      // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\n      let initialOffset = -0.18,\n        offset = 1;\n      return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\n    };\n    this.min = (a, b) => {\n      return a < b ? a : b;\n    };\n    this.max = (a, b) => {\n      return a > b ? a : b;\n    };\n    this.uuid = () => {\n      // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n      var dt = new Date().getTime();\n      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n      });\n      return uuid;\n    };\n    this.checkViewport = () => {\n      this.findSvgElement();\n      let previousValue = this.isInViewport;\n      this.isInViewport = this.isElementInViewport(this.svgElement);\n      if (previousValue !== this.isInViewport && this.onViewportChanged.observers.length > 0) {\n        this.ngZone.run(() => {\n          this.onViewportChanged.emit({\n            oldValue: previousValue,\n            newValue: this.isInViewport\n          });\n        });\n      }\n    };\n    this.onScroll = event => {\n      this.checkViewport();\n    };\n    this.loadEventsForLazyMode = () => {\n      if (this.options.lazy) {\n        this.ngZone.runOutsideAngular(() => {\n          this.document.addEventListener('scroll', this.onScroll, true);\n          this.window.addEventListener('resize', this.onScroll, true);\n        });\n        if (this._viewportChangedSubscriber === null) {\n          this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({\n            oldValue,\n            newValue\n          }) => {\n            newValue ? this.render() : null;\n          });\n        }\n        // svgElement must be created in DOM before being checked.\n        // Is there a better way to check the existence of svgElemnt?\n        let _timer = timer(0, 50).subscribe(() => {\n          this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\n        });\n      }\n    };\n    this.unloadEventsForLazyMode = () => {\n      // Remove event listeners\n      this.document.removeEventListener('scroll', this.onScroll, true);\n      this.window.removeEventListener('resize', this.onScroll, true);\n      // Unsubscribe onViewportChanged\n      if (this._viewportChangedSubscriber !== null) {\n        this._viewportChangedSubscriber.unsubscribe();\n        this._viewportChangedSubscriber = null;\n      }\n    };\n    this.document = injector.get(DOCUMENT);\n    this.window = this.document.defaultView;\n    Object.assign(this.options, defaultOptions);\n    Object.assign(this.defaultOptions, defaultOptions);\n  }\n  emitClickEvent(event) {\n    if (this.options.renderOnClick) {\n      this.animate(0, this.options.percent);\n    }\n    if (this.onClick.observers.length > 0) {\n      this.onClick.emit(event);\n    }\n  }\n  isDrawing() {\n    return this._timerSubscription && !this._timerSubscription.closed;\n  }\n  findSvgElement() {\n    if (this.svgElement === null) {\n      let tags = this.elRef.nativeElement.getElementsByTagName('svg');\n      if (tags.length > 0) {\n        this.svgElement = tags[0];\n      }\n    }\n  }\n  isElementInViewport(el) {\n    // Return false if el has not been created in page.\n    if (el === null || el === undefined) return false;\n    // Check if the element is out of view due to a container scrolling\n    let rect = el.getBoundingClientRect(),\n      parent = el.parentNode,\n      parentRect;\n    do {\n      parentRect = parent.getBoundingClientRect();\n      if (rect.top >= parentRect.bottom) return false;\n      if (rect.bottom <= parentRect.top) return false;\n      if (rect.left >= parentRect.right) return false;\n      if (rect.right <= parentRect.left) return false;\n      parent = parent.parentNode;\n    } while (parent != this.document.body);\n    // Check its within the document viewport\n    if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight)) return false;\n    if (rect.bottom <= 0) return false;\n    if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth)) return false;\n    if (rect.right <= 0) return false;\n    return true;\n  }\n  ngOnInit() {\n    this.loadEventsForLazyMode();\n  }\n  ngOnDestroy() {\n    this.unloadEventsForLazyMode();\n  }\n  ngOnChanges(changes) {\n    this.render();\n    if ('lazy' in changes) {\n      changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\n    }\n  }\n}\nCircleProgressComponent.ɵfac = function CircleProgressComponent_Factory(t) {\n  return new (t || CircleProgressComponent)(i0.ɵɵdirectiveInject(CircleProgressOptions), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\nCircleProgressComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleProgressComponent,\n  selectors: [[\"circle-progress\"]],\n  inputs: {\n    name: \"name\",\n    class: \"class\",\n    backgroundGradient: \"backgroundGradient\",\n    backgroundColor: \"backgroundColor\",\n    backgroundGradientStopColor: \"backgroundGradientStopColor\",\n    backgroundOpacity: \"backgroundOpacity\",\n    backgroundStroke: \"backgroundStroke\",\n    backgroundStrokeWidth: \"backgroundStrokeWidth\",\n    backgroundPadding: \"backgroundPadding\",\n    radius: \"radius\",\n    space: \"space\",\n    percent: \"percent\",\n    toFixed: \"toFixed\",\n    maxPercent: \"maxPercent\",\n    renderOnClick: \"renderOnClick\",\n    units: \"units\",\n    unitsFontSize: \"unitsFontSize\",\n    unitsFontWeight: \"unitsFontWeight\",\n    unitsColor: \"unitsColor\",\n    outerStrokeGradient: \"outerStrokeGradient\",\n    outerStrokeWidth: \"outerStrokeWidth\",\n    outerStrokeColor: \"outerStrokeColor\",\n    outerStrokeGradientStopColor: \"outerStrokeGradientStopColor\",\n    outerStrokeLinecap: \"outerStrokeLinecap\",\n    innerStrokeColor: \"innerStrokeColor\",\n    innerStrokeWidth: \"innerStrokeWidth\",\n    titleFormat: \"titleFormat\",\n    title: \"title\",\n    titleColor: \"titleColor\",\n    titleFontSize: \"titleFontSize\",\n    titleFontWeight: \"titleFontWeight\",\n    subtitleFormat: \"subtitleFormat\",\n    subtitle: \"subtitle\",\n    subtitleColor: \"subtitleColor\",\n    subtitleFontSize: \"subtitleFontSize\",\n    subtitleFontWeight: \"subtitleFontWeight\",\n    imageSrc: \"imageSrc\",\n    imageHeight: \"imageHeight\",\n    imageWidth: \"imageWidth\",\n    animation: \"animation\",\n    animateTitle: \"animateTitle\",\n    animateSubtitle: \"animateSubtitle\",\n    animationDuration: \"animationDuration\",\n    showTitle: \"showTitle\",\n    showSubtitle: \"showSubtitle\",\n    showUnits: \"showUnits\",\n    showImage: \"showImage\",\n    showBackground: \"showBackground\",\n    showInnerStroke: \"showInnerStroke\",\n    clockwise: \"clockwise\",\n    responsive: \"responsive\",\n    startFromZero: \"startFromZero\",\n    showZeroOuterStroke: \"showZeroOuterStroke\",\n    lazy: \"lazy\",\n    templateOptions: [i0.ɵɵInputFlags.None, \"options\", \"templateOptions\"]\n  },\n  outputs: {\n    onClick: \"onClick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", \"preserveAspectRatio\", \"xMidYMid meet\", 3, \"click\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"preserveAspectRatio\", \"xMidYMid meet\", 3, \"click\"], [4, \"ngIf\"], [\"alignment-baseline\", \"baseline\", 4, \"ngIf\"], [\"preserveAspectRatio\", \"none\", 4, \"ngIf\"], [\"offset\", \"5%\"], [\"offset\", \"95%\"], [\"alignment-baseline\", \"baseline\"], [4, \"ngFor\", \"ngForOf\"], [\"preserveAspectRatio\", \"none\"]],\n  template: function CircleProgressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleProgressComponent__svg_svg_0_Template, 9, 11, \"svg\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.svg);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleProgressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'circle-progress',\n      template: `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\n            <defs>\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </linearGradient>\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </radialGradient>\n            </defs>\n            <ng-container *ngIf=\"options.showBackground\">\n                <circle *ngIf=\"!options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n                <circle *ngIf=\"options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        attr.fill=\"url({{window.location.href}}#{{svg.radialGradient.id}})\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n            </ng-container>            \n            <circle *ngIf=\"options.showInnerStroke\"\n                    [attr.cx]=\"svg.circle.cx\"\n                    [attr.cy]=\"svg.circle.cy\"\n                    [attr.r]=\"svg.circle.r\"\n                    [attr.fill]=\"svg.circle.fill\"\n                    [attr.stroke]=\"svg.circle.stroke\"\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\n                <path *ngIf=\"!options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        [attr.stroke]=\"svg.path.stroke\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n                <path *ngIf=\"options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        attr.stroke=\"url({{window.location.href}}#{{svg.outerLinearGradient.id}})\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n            </ng-container>\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\n                  alignment-baseline=\"baseline\"\n                  [attr.x]=\"svg.circle.cx\"\n                  [attr.y]=\"svg.circle.cy\"\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\n                <ng-container *ngIf=\"options.showTitle\">\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\n                           [attr.x]=\"svg.title.x\"\n                           [attr.y]=\"svg.title.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.title.fontSize\"\n                           [attr.font-weight]=\"svg.title.fontWeight\"\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\n                </ng-container>\n                <tspan *ngIf=\"options.showUnits\"\n                       [attr.font-size]=\"svg.units.fontSize\"\n                       [attr.font-weight]=\"svg.units.fontWeight\"\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\n                <ng-container *ngIf=\"options.showSubtitle\">\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\n                           [attr.x]=\"svg.subtitle.x\"\n                           [attr.y]=\"svg.subtitle.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\n                </ng-container>\n            </text>\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \n                [attr.height]=\"svg.image.height\"\n                [attr.width]=\"svg.image.width\"\n                [attr.xlink:href]=\"svg.image.src\"\n                [attr.x]=\"svg.image.x\"\n                [attr.y]=\"svg.image.y\"\n            />\n        </svg>\n    `\n    }]\n  }], function () {\n    return [{\n      type: CircleProgressOptions\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    onClick: [{\n      type: Output\n    }],\n    name: [{\n      type: Input\n    }],\n    class: [{\n      type: Input\n    }],\n    backgroundGradient: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    backgroundGradientStopColor: [{\n      type: Input\n    }],\n    backgroundOpacity: [{\n      type: Input\n    }],\n    backgroundStroke: [{\n      type: Input\n    }],\n    backgroundStrokeWidth: [{\n      type: Input\n    }],\n    backgroundPadding: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    space: [{\n      type: Input\n    }],\n    percent: [{\n      type: Input\n    }],\n    toFixed: [{\n      type: Input\n    }],\n    maxPercent: [{\n      type: Input\n    }],\n    renderOnClick: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    unitsFontSize: [{\n      type: Input\n    }],\n    unitsFontWeight: [{\n      type: Input\n    }],\n    unitsColor: [{\n      type: Input\n    }],\n    outerStrokeGradient: [{\n      type: Input\n    }],\n    outerStrokeWidth: [{\n      type: Input\n    }],\n    outerStrokeColor: [{\n      type: Input\n    }],\n    outerStrokeGradientStopColor: [{\n      type: Input\n    }],\n    outerStrokeLinecap: [{\n      type: Input\n    }],\n    innerStrokeColor: [{\n      type: Input\n    }],\n    innerStrokeWidth: [{\n      type: Input\n    }],\n    titleFormat: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    titleColor: [{\n      type: Input\n    }],\n    titleFontSize: [{\n      type: Input\n    }],\n    titleFontWeight: [{\n      type: Input\n    }],\n    subtitleFormat: [{\n      type: Input\n    }],\n    subtitle: [{\n      type: Input\n    }],\n    subtitleColor: [{\n      type: Input\n    }],\n    subtitleFontSize: [{\n      type: Input\n    }],\n    subtitleFontWeight: [{\n      type: Input\n    }],\n    imageSrc: [{\n      type: Input\n    }],\n    imageHeight: [{\n      type: Input\n    }],\n    imageWidth: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    animateTitle: [{\n      type: Input\n    }],\n    animateSubtitle: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    showTitle: [{\n      type: Input\n    }],\n    showSubtitle: [{\n      type: Input\n    }],\n    showUnits: [{\n      type: Input\n    }],\n    showImage: [{\n      type: Input\n    }],\n    showBackground: [{\n      type: Input\n    }],\n    showInnerStroke: [{\n      type: Input\n    }],\n    clockwise: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    startFromZero: [{\n      type: Input\n    }],\n    showZeroOuterStroke: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    templateOptions: [{\n      type: Input,\n      args: ['options']\n    }]\n  });\n})();\nclass NgCircleProgressModule {\n  static forRoot(options = {}) {\n    return {\n      ngModule: NgCircleProgressModule,\n      providers: [{\n        provide: CircleProgressOptions,\n        useValue: options\n      }]\n    };\n  }\n}\nNgCircleProgressModule.ɵfac = function NgCircleProgressModule_Factory(t) {\n  return new (t || NgCircleProgressModule)();\n};\nNgCircleProgressModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgCircleProgressModule\n});\nNgCircleProgressModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgCircleProgressModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CircleProgressComponent],\n      imports: [CommonModule],\n      exports: [CircleProgressComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-circle-progress\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule };","map":{"version":3,"names":["i0","EventEmitter","Component","Output","Input","NgModule","i1","DOCUMENT","CommonModule","timer","CircleProgressComponent__svg_svg_0__svg_linearGradient_2_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵattribute","svg","outerLinearGradient","id","ɵɵadvance","colorStop1","colorStop2","CircleProgressComponent__svg_svg_0__svg_radialGradient_3_Template","ctx_r2","radialGradient","CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_1_Template","ctx_r8","backgroundCircle","cx","cy","r","fill","fillOpacity","stroke","strokeWidth","CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_2_Template","ctx_r9","ɵɵattributeInterpolate2","window","location","href","CircleProgressComponent__svg_svg_0__svg_ng_container_4_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r3","ɵɵproperty","options","backgroundGradient","CircleProgressComponent__svg_svg_0__svg_circle_5_Template","ctx_r4","circle","CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_1_Template","ctx_r10","path","d","strokeLinecap","CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_2_Template","ctx_r11","CircleProgressComponent__svg_svg_0__svg_ng_container_6_Template","ctx_r5","outerStrokeGradient","CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1__svg_tspan_1_Template","ɵɵtext","tspan_r16","$implicit","ctx_r15","title","x","y","dy","fontSize","fontWeight","color","ɵɵtextInterpolate","span","CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1_Template","ctx_r12","tspans","CircleProgressComponent__svg_svg_0__svg_text_7__svg_tspan_2_Template","ctx_r13","units","text","CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3__svg_tspan_1_Template","tspan_r18","ctx_r17","subtitle","CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3_Template","ctx_r14","CircleProgressComponent__svg_svg_0__svg_text_7_Template","ctx_r6","textAnchor","showTitle","showUnits","showSubtitle","CircleProgressComponent__svg_svg_0__svg_image_8_Template","ctx_r7","image","height","width","src","CircleProgressComponent__svg_svg_0_Template","_r20","ɵɵgetCurrentView","ɵɵlistener","CircleProgressComponent__svg_svg_0_Template__svg_svg_click_0_listener","$event","ɵɵrestoreView","ctx_r19","ɵɵresetView","emitClickEvent","ctx_r0","viewBox","class","showBackground","showInnerStroke","percent","showZeroOuterStroke","showImage","CircleProgressOptions","constructor","backgroundColor","backgroundGradientStopColor","backgroundOpacity","backgroundStroke","backgroundStrokeWidth","backgroundPadding","radius","space","toFixed","maxPercent","renderOnClick","unitsFontSize","unitsFontWeight","unitsColor","outerStrokeWidth","outerStrokeColor","outerStrokeGradientStopColor","outerStrokeLinecap","innerStrokeColor","innerStrokeWidth","titleFormat","undefined","titleColor","titleFontSize","titleFontWeight","subtitleFormat","subtitleColor","subtitleFontSize","subtitleFontWeight","imageSrc","imageHeight","imageWidth","animation","animateTitle","animateSubtitle","animationDuration","clockwise","responsive","startFromZero","lazy","CircleProgressComponent","defaultOptions","ngZone","elRef","injector","onClick","svgElement","isInViewport","onViewportChanged","_viewportChangedSubscriber","_lastPercent","_gradientUUID","render","applyOptions","draw","animate","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadius","Math","PI","sin","cos","abs","circlePercent","boxSize","max","centre","startPoint","endPoint","largeArcFlag","sweepFlag","titlePercent","titleTextPercent","subtitlePercent","texts","name","formatted","Array","push","toString","rowCount","rowNum","length","getRelativeY","uuid","getAnimationParameters","previousPercent","currentPercent","MIN_INTERVAL","times","step","interval","fromPercent","toPercent","min","delta","round","_timerSubscription","closed","unsubscribe","count","subscribe","Object","keys","hasOwnProperty","templateOptions","initialOffset","offset","a","b","dt","Date","getTime","replace","c","random","floor","checkViewport","findSvgElement","previousValue","isElementInViewport","observers","run","emit","oldValue","newValue","onScroll","event","loadEventsForLazyMode","runOutsideAngular","document","addEventListener","_timer","unloadEventsForLazyMode","removeEventListener","get","defaultView","assign","isDrawing","tags","nativeElement","getElementsByTagName","el","rect","getBoundingClientRect","parent","parentNode","parentRect","top","bottom","left","right","body","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","ngOnInit","ngOnDestroy","ngOnChanges","changes","currentValue","ɵfac","CircleProgressComponent_Factory","t","ɵɵdirectiveInject","NgZone","ElementRef","Injector","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","ɵɵInputFlags","None","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CircleProgressComponent_Template","dependencies","NgForOf","NgIf","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","NgCircleProgressModule","forRoot","ngModule","providers","provide","useValue","NgCircleProgressModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/saikoushikyellala/Desktop/LearnTracker/Koushik Sprint-1/LearnTr/FrontEnd/node_modules/ng-circle-progress/fesm2020/ng-circle-progress.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\n\nclass CircleProgressOptions {\n    constructor() {\n        this.class = '';\n        this.backgroundGradient = false;\n        this.backgroundColor = 'transparent';\n        this.backgroundGradientStopColor = 'transparent';\n        this.backgroundOpacity = 1;\n        this.backgroundStroke = 'transparent';\n        this.backgroundStrokeWidth = 0;\n        this.backgroundPadding = 5;\n        this.percent = 0;\n        this.radius = 90;\n        this.space = 4;\n        this.toFixed = 0;\n        this.maxPercent = 1000;\n        this.renderOnClick = true;\n        this.units = '%';\n        this.unitsFontSize = '10';\n        this.unitsFontWeight = 'normal';\n        this.unitsColor = '#444444';\n        this.outerStrokeGradient = false;\n        this.outerStrokeWidth = 8;\n        this.outerStrokeColor = '#78C000';\n        this.outerStrokeGradientStopColor = 'transparent';\n        this.outerStrokeLinecap = 'round';\n        this.innerStrokeColor = '#C7E596';\n        this.innerStrokeWidth = 4;\n        this.titleFormat = undefined;\n        this.title = 'auto';\n        this.titleColor = '#444444';\n        this.titleFontSize = '20';\n        this.titleFontWeight = 'normal';\n        this.subtitleFormat = undefined;\n        this.subtitle = 'progress';\n        this.subtitleColor = '#A9A9A9';\n        this.subtitleFontSize = '10';\n        this.subtitleFontWeight = 'normal';\n        this.imageSrc = undefined;\n        this.imageHeight = 0;\n        this.imageWidth = 0;\n        this.animation = true;\n        this.animateTitle = true;\n        this.animateSubtitle = false;\n        this.animationDuration = 500;\n        this.showTitle = true;\n        this.showSubtitle = true;\n        this.showUnits = true;\n        this.showImage = false;\n        this.showBackground = true;\n        this.showInnerStroke = true;\n        this.clockwise = true;\n        this.responsive = false;\n        this.startFromZero = true;\n        this.showZeroOuterStroke = true;\n        this.lazy = false;\n    }\n}\nclass CircleProgressComponent {\n    constructor(defaultOptions, ngZone, elRef, injector) {\n        this.ngZone = ngZone;\n        this.elRef = elRef;\n        this.onClick = new EventEmitter();\n        // <svg> of component\n        this.svgElement = null;\n        // whether <svg> is in viewport\n        this.isInViewport = false;\n        // event for notifying viewport change caused by scrolling or resizing\n        this.onViewportChanged = new EventEmitter();\n        this._viewportChangedSubscriber = null;\n        this.options = new CircleProgressOptions();\n        this.defaultOptions = new CircleProgressOptions();\n        this._lastPercent = 0;\n        this._gradientUUID = null;\n        this.render = () => {\n            this.applyOptions();\n            if (this.options.lazy) {\n                // Draw svg if it doesn't exist\n                this.svgElement === null && this.draw(this._lastPercent);\n                // Draw it only when it's in the viewport\n                if (this.isInViewport) {\n                    // Draw it at the latest position when I am in.\n                    if (this.options.animation && this.options.animationDuration > 0) {\n                        this.animate(this._lastPercent, this.options.percent);\n                    }\n                    else {\n                        this.draw(this.options.percent);\n                    }\n                    this._lastPercent = this.options.percent;\n                }\n            }\n            else {\n                if (this.options.animation && this.options.animationDuration > 0) {\n                    this.animate(this._lastPercent, this.options.percent);\n                }\n                else {\n                    this.draw(this.options.percent);\n                }\n                this._lastPercent = this.options.percent;\n            }\n        };\n        this.polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n            let angleInRadius = angleInDegrees * Math.PI / 180;\n            let x = centerX + Math.sin(angleInRadius) * radius;\n            let y = centerY - Math.cos(angleInRadius) * radius;\n            return { x: x, y: y };\n        };\n        this.draw = (percent) => {\n            // make percent reasonable\n            percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\n            // circle percent shouldn't be greater than 100%.\n            let circlePercent = (percent > 100) ? 100 : percent;\n            // determine box size\n            let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\n            if (this.options.showBackground) {\n                boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\n            }\n            // the centre of the circle\n            let centre = { x: boxSize / 2, y: boxSize / 2 };\n            // the start point of the arc\n            let startPoint = { x: centre.x, y: centre.y - this.options.radius };\n            // get the end point of the arc\n            let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\n                circlePercent :\n                (100 - circlePercent)) / 100); // ####################\n            // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\n            if (circlePercent === 100) {\n                endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\n            }\n            // largeArcFlag and sweepFlag\n            let largeArcFlag, sweepFlag;\n            if (circlePercent > 50) {\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\n            }\n            else {\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\n            }\n            // percent may not equal the actual percent\n            let titlePercent = this.options.animateTitle ? percent : this.options.percent;\n            let titleTextPercent = titlePercent > this.options.maxPercent ?\n                `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\n            let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\n            // get title object\n            let title = {\n                x: centre.x,\n                y: centre.y,\n                textAnchor: 'middle',\n                color: this.options.titleColor,\n                fontSize: this.options.titleFontSize,\n                fontWeight: this.options.titleFontWeight,\n                texts: [],\n                tspans: []\n            };\n            // from v0.9.9, both title and titleFormat(...) may be an array of string.\n            if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\n                let formatted = this.options.titleFormat(titlePercent);\n                if (formatted instanceof Array) {\n                    title.texts = [...formatted];\n                }\n                else {\n                    title.texts.push(formatted.toString());\n                }\n            }\n            else {\n                if (this.options.title === 'auto') {\n                    title.texts.push(titleTextPercent);\n                }\n                else {\n                    if (this.options.title instanceof Array) {\n                        title.texts = [...this.options.title];\n                    }\n                    else {\n                        title.texts.push(this.options.title.toString());\n                    }\n                }\n            }\n            // get subtitle object\n            let subtitle = {\n                x: centre.x,\n                y: centre.y,\n                textAnchor: 'middle',\n                color: this.options.subtitleColor,\n                fontSize: this.options.subtitleFontSize,\n                fontWeight: this.options.subtitleFontWeight,\n                texts: [],\n                tspans: []\n            };\n            // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\n            if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\n                let formatted = this.options.subtitleFormat(subtitlePercent);\n                if (formatted instanceof Array) {\n                    subtitle.texts = [...formatted];\n                }\n                else {\n                    subtitle.texts.push(formatted.toString());\n                }\n            }\n            else {\n                if (this.options.subtitle instanceof Array) {\n                    subtitle.texts = [...this.options.subtitle];\n                }\n                else {\n                    subtitle.texts.push(this.options.subtitle.toString());\n                }\n            }\n            // get units object\n            let units = {\n                text: `${this.options.units}`,\n                fontSize: this.options.unitsFontSize,\n                fontWeight: this.options.unitsFontWeight,\n                color: this.options.unitsColor\n            };\n            // get total count of text lines to be shown\n            let rowCount = 0, rowNum = 1;\n            this.options.showTitle && (rowCount += title.texts.length);\n            this.options.showSubtitle && (rowCount += subtitle.texts.length);\n            // calc dy for each tspan for title\n            if (this.options.showTitle) {\n                for (let span of title.texts) {\n                    title.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\n                    rowNum++;\n                }\n            }\n            // calc dy for each tspan for subtitle\n            if (this.options.showSubtitle) {\n                for (let span of subtitle.texts) {\n                    subtitle.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\n                    rowNum++;\n                }\n            }\n            // create ID for gradient element\n            if (null === this._gradientUUID) {\n                this._gradientUUID = this.uuid();\n            }\n            // Bring it all together\n            this.svg = {\n                viewBox: `0 0 ${boxSize} ${boxSize}`,\n                // Set both width and height to '100%' if it's responsive\n                width: this.options.responsive ? '100%' : boxSize,\n                height: this.options.responsive ? '100%' : boxSize,\n                backgroundCircle: {\n                    cx: centre.x,\n                    cy: centre.y,\n                    r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\n                    fill: this.options.backgroundColor,\n                    fillOpacity: this.options.backgroundOpacity,\n                    stroke: this.options.backgroundStroke,\n                    strokeWidth: this.options.backgroundStrokeWidth,\n                },\n                path: {\n                    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\n                    d: `M ${startPoint.x} ${startPoint.y}\r\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\n                    stroke: this.options.outerStrokeColor,\n                    strokeWidth: this.options.outerStrokeWidth,\n                    strokeLinecap: this.options.outerStrokeLinecap,\n                    fill: 'none'\n                },\n                circle: {\n                    cx: centre.x,\n                    cy: centre.y,\n                    r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\n                    fill: 'none',\n                    stroke: this.options.innerStrokeColor,\n                    strokeWidth: this.options.innerStrokeWidth,\n                },\n                title: title,\n                units: units,\n                subtitle: subtitle,\n                image: {\n                    x: centre.x - this.options.imageWidth / 2,\n                    y: centre.y - this.options.imageHeight / 2,\n                    src: this.options.imageSrc,\n                    width: this.options.imageWidth,\n                    height: this.options.imageHeight,\n                },\n                outerLinearGradient: {\n                    id: 'outer-linear-' + this._gradientUUID,\n                    colorStop1: this.options.outerStrokeColor,\n                    colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\n                },\n                radialGradient: {\n                    id: 'radial-' + this._gradientUUID,\n                    colorStop1: this.options.backgroundColor,\n                    colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\n                }\n            };\n        };\n        this.getAnimationParameters = (previousPercent, currentPercent) => {\n            const MIN_INTERVAL = 10;\n            let times, step, interval;\n            let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\n            let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\n            let delta = Math.abs(Math.round(toPercent - fromPercent));\n            if (delta >= 100) {\n                // we will finish animation in 100 times\n                times = 100;\n                if (!this.options.animateTitle && !this.options.animateSubtitle) {\n                    step = 1;\n                }\n                else {\n                    // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\n                    step = Math.round(delta / times);\n                }\n            }\n            else {\n                // we will finish in as many times as the number of percent.\n                times = delta;\n                step = 1;\n            }\n            // Get the interval of timer\n            interval = Math.round(this.options.animationDuration / times);\n            // Readjust all values if the interval of timer is extremely small.\n            if (interval < MIN_INTERVAL) {\n                interval = MIN_INTERVAL;\n                times = this.options.animationDuration / interval;\n                if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\n                    step = Math.round(100 / times);\n                }\n                else {\n                    step = Math.round(delta / times);\n                }\n            }\n            // step must be greater than 0.\n            if (step < 1) {\n                step = 1;\n            }\n            return { times: times, step: step, interval: interval };\n        };\n        this.animate = (previousPercent, currentPercent) => {\n            if (this._timerSubscription && !this._timerSubscription.closed) {\n                this._timerSubscription.unsubscribe();\n            }\n            let fromPercent = this.options.startFromZero ? 0 : previousPercent;\n            let toPercent = currentPercent;\n            let { step: step, interval: interval } = this.getAnimationParameters(fromPercent, toPercent);\n            let count = fromPercent;\n            if (fromPercent < toPercent) {\n                this._timerSubscription = timer(0, interval).subscribe(() => {\n                    count += step;\n                    if (count <= toPercent) {\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\n                            this.draw(toPercent);\n                            this._timerSubscription.unsubscribe();\n                        }\n                        else {\n                            this.draw(count);\n                        }\n                    }\n                    else {\n                        this.draw(toPercent);\n                        this._timerSubscription.unsubscribe();\n                    }\n                });\n            }\n            else {\n                this._timerSubscription = timer(0, interval).subscribe(() => {\n                    count -= step;\n                    if (count >= toPercent) {\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\n                            this.draw(toPercent);\n                            this._timerSubscription.unsubscribe();\n                        }\n                        else {\n                            this.draw(count);\n                        }\n                    }\n                    else {\n                        this.draw(toPercent);\n                        this._timerSubscription.unsubscribe();\n                    }\n                });\n            }\n        };\n        this.applyOptions = () => {\n            // the options of <circle-progress> may change already\n            for (let name of Object.keys(this.options)) {\n                if (this.hasOwnProperty(name) && this[name] !== undefined) {\n                    this.options[name] = this[name];\n                }\n                else if (this.templateOptions && this.templateOptions[name] !== undefined) {\n                    this.options[name] = this.templateOptions[name];\n                }\n            }\n            // make sure key options valid\n            this.options.radius = Math.abs(+this.options.radius);\n            this.options.space = +this.options.space;\n            this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\n            this.options.maxPercent = Math.abs(+this.options.maxPercent);\n            this.options.animationDuration = Math.abs(this.options.animationDuration);\n            this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\n            this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\n            this.options.backgroundPadding = +this.options.backgroundPadding;\n        };\n        this.getRelativeY = (rowNum, rowCount) => {\n            // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\n            let initialOffset = -0.18, offset = 1;\n            return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\n        };\n        this.min = (a, b) => {\n            return a < b ? a : b;\n        };\n        this.max = (a, b) => {\n            return a > b ? a : b;\n        };\n        this.uuid = () => {\n            // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n            var dt = new Date().getTime();\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (dt + Math.random() * 16) % 16 | 0;\n                dt = Math.floor(dt / 16);\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n            return uuid;\n        };\n        this.checkViewport = () => {\n            this.findSvgElement();\n            let previousValue = this.isInViewport;\n            this.isInViewport = this.isElementInViewport(this.svgElement);\n            if (previousValue !== this.isInViewport && this.onViewportChanged.observers.length > 0) {\n                this.ngZone.run(() => {\n                    this.onViewportChanged.emit({ oldValue: previousValue, newValue: this.isInViewport });\n                });\n            }\n        };\n        this.onScroll = (event) => {\n            this.checkViewport();\n        };\n        this.loadEventsForLazyMode = () => {\n            if (this.options.lazy) {\n                this.ngZone.runOutsideAngular(() => {\n                    this.document.addEventListener('scroll', this.onScroll, true);\n                    this.window.addEventListener('resize', this.onScroll, true);\n                });\n                if (this._viewportChangedSubscriber === null) {\n                    this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({ oldValue, newValue }) => {\n                        newValue ? this.render() : null;\n                    });\n                }\n                // svgElement must be created in DOM before being checked.\n                // Is there a better way to check the existence of svgElemnt?\n                let _timer = timer(0, 50).subscribe(() => {\n                    this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\n                });\n            }\n        };\n        this.unloadEventsForLazyMode = () => {\n            // Remove event listeners\n            this.document.removeEventListener('scroll', this.onScroll, true);\n            this.window.removeEventListener('resize', this.onScroll, true);\n            // Unsubscribe onViewportChanged\n            if (this._viewportChangedSubscriber !== null) {\n                this._viewportChangedSubscriber.unsubscribe();\n                this._viewportChangedSubscriber = null;\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n        this.window = this.document.defaultView;\n        Object.assign(this.options, defaultOptions);\n        Object.assign(this.defaultOptions, defaultOptions);\n    }\n    emitClickEvent(event) {\n        if (this.options.renderOnClick) {\n            this.animate(0, this.options.percent);\n        }\n        if (this.onClick.observers.length > 0) {\n            this.onClick.emit(event);\n        }\n    }\n    isDrawing() {\n        return (this._timerSubscription && !this._timerSubscription.closed);\n    }\n    findSvgElement() {\n        if (this.svgElement === null) {\n            let tags = this.elRef.nativeElement.getElementsByTagName('svg');\n            if (tags.length > 0) {\n                this.svgElement = tags[0];\n            }\n        }\n    }\n    isElementInViewport(el) {\n        // Return false if el has not been created in page.\n        if (el === null || el === undefined)\n            return false;\n        // Check if the element is out of view due to a container scrolling\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\n        do {\n            parentRect = parent.getBoundingClientRect();\n            if (rect.top >= parentRect.bottom)\n                return false;\n            if (rect.bottom <= parentRect.top)\n                return false;\n            if (rect.left >= parentRect.right)\n                return false;\n            if (rect.right <= parentRect.left)\n                return false;\n            parent = parent.parentNode;\n        } while (parent != this.document.body);\n        // Check its within the document viewport\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight))\n            return false;\n        if (rect.bottom <= 0)\n            return false;\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth))\n            return false;\n        if (rect.right <= 0)\n            return false;\n        return true;\n    }\n    ngOnInit() {\n        this.loadEventsForLazyMode();\n    }\n    ngOnDestroy() {\n        this.unloadEventsForLazyMode();\n    }\n    ngOnChanges(changes) {\n        this.render();\n        if ('lazy' in changes) {\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\n        }\n    }\n}\nCircleProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: CircleProgressComponent, deps: [{ token: CircleProgressOptions }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nCircleProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: CircleProgressComponent, selector: \"circle-progress\", inputs: { name: \"name\", class: \"class\", backgroundGradient: \"backgroundGradient\", backgroundColor: \"backgroundColor\", backgroundGradientStopColor: \"backgroundGradientStopColor\", backgroundOpacity: \"backgroundOpacity\", backgroundStroke: \"backgroundStroke\", backgroundStrokeWidth: \"backgroundStrokeWidth\", backgroundPadding: \"backgroundPadding\", radius: \"radius\", space: \"space\", percent: \"percent\", toFixed: \"toFixed\", maxPercent: \"maxPercent\", renderOnClick: \"renderOnClick\", units: \"units\", unitsFontSize: \"unitsFontSize\", unitsFontWeight: \"unitsFontWeight\", unitsColor: \"unitsColor\", outerStrokeGradient: \"outerStrokeGradient\", outerStrokeWidth: \"outerStrokeWidth\", outerStrokeColor: \"outerStrokeColor\", outerStrokeGradientStopColor: \"outerStrokeGradientStopColor\", outerStrokeLinecap: \"outerStrokeLinecap\", innerStrokeColor: \"innerStrokeColor\", innerStrokeWidth: \"innerStrokeWidth\", titleFormat: \"titleFormat\", title: \"title\", titleColor: \"titleColor\", titleFontSize: \"titleFontSize\", titleFontWeight: \"titleFontWeight\", subtitleFormat: \"subtitleFormat\", subtitle: \"subtitle\", subtitleColor: \"subtitleColor\", subtitleFontSize: \"subtitleFontSize\", subtitleFontWeight: \"subtitleFontWeight\", imageSrc: \"imageSrc\", imageHeight: \"imageHeight\", imageWidth: \"imageWidth\", animation: \"animation\", animateTitle: \"animateTitle\", animateSubtitle: \"animateSubtitle\", animationDuration: \"animationDuration\", showTitle: \"showTitle\", showSubtitle: \"showSubtitle\", showUnits: \"showUnits\", showImage: \"showImage\", showBackground: \"showBackground\", showInnerStroke: \"showInnerStroke\", clockwise: \"clockwise\", responsive: \"responsive\", startFromZero: \"startFromZero\", showZeroOuterStroke: \"showZeroOuterStroke\", lazy: \"lazy\", templateOptions: [\"options\", \"templateOptions\"] }, outputs: { onClick: \"onClick\" }, usesOnChanges: true, ngImport: i0, template: `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\r\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\r\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\r\n            <defs>\r\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </linearGradient>\r\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </radialGradient>\r\n            </defs>\r\n            <ng-container *ngIf=\"options.showBackground\">\r\n                <circle *ngIf=\"!options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n                <circle *ngIf=\"options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        attr.fill=\"url({{window.location.href}}#{{svg.radialGradient.id}})\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n            </ng-container>            \r\n            <circle *ngIf=\"options.showInnerStroke\"\r\n                    [attr.cx]=\"svg.circle.cx\"\r\n                    [attr.cy]=\"svg.circle.cy\"\r\n                    [attr.r]=\"svg.circle.r\"\r\n                    [attr.fill]=\"svg.circle.fill\"\r\n                    [attr.stroke]=\"svg.circle.stroke\"\r\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\r\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\r\n                <path *ngIf=\"!options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        [attr.stroke]=\"svg.path.stroke\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n                <path *ngIf=\"options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        attr.stroke=\"url({{window.location.href}}#{{svg.outerLinearGradient.id}})\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n            </ng-container>\r\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\r\n                  alignment-baseline=\"baseline\"\r\n                  [attr.x]=\"svg.circle.cx\"\r\n                  [attr.y]=\"svg.circle.cy\"\r\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\r\n                <ng-container *ngIf=\"options.showTitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\r\n                           [attr.x]=\"svg.title.x\"\r\n                           [attr.y]=\"svg.title.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.title.fontSize\"\r\n                           [attr.font-weight]=\"svg.title.fontWeight\"\r\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n                <tspan *ngIf=\"options.showUnits\"\r\n                       [attr.font-size]=\"svg.units.fontSize\"\r\n                       [attr.font-weight]=\"svg.units.fontWeight\"\r\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\r\n                <ng-container *ngIf=\"options.showSubtitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\r\n                           [attr.x]=\"svg.subtitle.x\"\r\n                           [attr.y]=\"svg.subtitle.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\r\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\r\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n            </text>\r\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \r\n                [attr.height]=\"svg.image.height\"\r\n                [attr.width]=\"svg.image.width\"\r\n                [attr.xlink:href]=\"svg.image.src\"\r\n                [attr.x]=\"svg.image.x\"\r\n                [attr.y]=\"svg.image.y\"\r\n            />\r\n        </svg>\r\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: CircleProgressComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'circle-progress',\n                    template: `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\r\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\r\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\r\n            <defs>\r\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </linearGradient>\r\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </radialGradient>\r\n            </defs>\r\n            <ng-container *ngIf=\"options.showBackground\">\r\n                <circle *ngIf=\"!options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n                <circle *ngIf=\"options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        attr.fill=\"url({{window.location.href}}#{{svg.radialGradient.id}})\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n            </ng-container>            \r\n            <circle *ngIf=\"options.showInnerStroke\"\r\n                    [attr.cx]=\"svg.circle.cx\"\r\n                    [attr.cy]=\"svg.circle.cy\"\r\n                    [attr.r]=\"svg.circle.r\"\r\n                    [attr.fill]=\"svg.circle.fill\"\r\n                    [attr.stroke]=\"svg.circle.stroke\"\r\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\r\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\r\n                <path *ngIf=\"!options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        [attr.stroke]=\"svg.path.stroke\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n                <path *ngIf=\"options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        attr.stroke=\"url({{window.location.href}}#{{svg.outerLinearGradient.id}})\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n            </ng-container>\r\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\r\n                  alignment-baseline=\"baseline\"\r\n                  [attr.x]=\"svg.circle.cx\"\r\n                  [attr.y]=\"svg.circle.cy\"\r\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\r\n                <ng-container *ngIf=\"options.showTitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\r\n                           [attr.x]=\"svg.title.x\"\r\n                           [attr.y]=\"svg.title.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.title.fontSize\"\r\n                           [attr.font-weight]=\"svg.title.fontWeight\"\r\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n                <tspan *ngIf=\"options.showUnits\"\r\n                       [attr.font-size]=\"svg.units.fontSize\"\r\n                       [attr.font-weight]=\"svg.units.fontWeight\"\r\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\r\n                <ng-container *ngIf=\"options.showSubtitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\r\n                           [attr.x]=\"svg.subtitle.x\"\r\n                           [attr.y]=\"svg.subtitle.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\r\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\r\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n            </text>\r\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \r\n                [attr.height]=\"svg.image.height\"\r\n                [attr.width]=\"svg.image.width\"\r\n                [attr.xlink:href]=\"svg.image.src\"\r\n                [attr.x]=\"svg.image.x\"\r\n                [attr.y]=\"svg.image.y\"\r\n            />\r\n        </svg>\r\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: CircleProgressOptions }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Injector }]; }, propDecorators: { onClick: [{\n                type: Output\n            }], name: [{\n                type: Input\n            }], class: [{\n                type: Input\n            }], backgroundGradient: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], backgroundGradientStopColor: [{\n                type: Input\n            }], backgroundOpacity: [{\n                type: Input\n            }], backgroundStroke: [{\n                type: Input\n            }], backgroundStrokeWidth: [{\n                type: Input\n            }], backgroundPadding: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], space: [{\n                type: Input\n            }], percent: [{\n                type: Input\n            }], toFixed: [{\n                type: Input\n            }], maxPercent: [{\n                type: Input\n            }], renderOnClick: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], unitsFontSize: [{\n                type: Input\n            }], unitsFontWeight: [{\n                type: Input\n            }], unitsColor: [{\n                type: Input\n            }], outerStrokeGradient: [{\n                type: Input\n            }], outerStrokeWidth: [{\n                type: Input\n            }], outerStrokeColor: [{\n                type: Input\n            }], outerStrokeGradientStopColor: [{\n                type: Input\n            }], outerStrokeLinecap: [{\n                type: Input\n            }], innerStrokeColor: [{\n                type: Input\n            }], innerStrokeWidth: [{\n                type: Input\n            }], titleFormat: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], titleColor: [{\n                type: Input\n            }], titleFontSize: [{\n                type: Input\n            }], titleFontWeight: [{\n                type: Input\n            }], subtitleFormat: [{\n                type: Input\n            }], subtitle: [{\n                type: Input\n            }], subtitleColor: [{\n                type: Input\n            }], subtitleFontSize: [{\n                type: Input\n            }], subtitleFontWeight: [{\n                type: Input\n            }], imageSrc: [{\n                type: Input\n            }], imageHeight: [{\n                type: Input\n            }], imageWidth: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], animateTitle: [{\n                type: Input\n            }], animateSubtitle: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], showTitle: [{\n                type: Input\n            }], showSubtitle: [{\n                type: Input\n            }], showUnits: [{\n                type: Input\n            }], showImage: [{\n                type: Input\n            }], showBackground: [{\n                type: Input\n            }], showInnerStroke: [{\n                type: Input\n            }], clockwise: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], startFromZero: [{\n                type: Input\n            }], showZeroOuterStroke: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], templateOptions: [{\n                type: Input,\n                args: ['options']\n            }] } });\n\nclass NgCircleProgressModule {\n    static forRoot(options = {}) {\n        return {\n            ngModule: NgCircleProgressModule,\n            providers: [\n                { provide: CircleProgressOptions, useValue: options }\n            ]\n        };\n    }\n}\nNgCircleProgressModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgCircleProgressModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgCircleProgressModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: NgCircleProgressModule, declarations: [CircleProgressComponent], imports: [CommonModule], exports: [CircleProgressComponent] });\nNgCircleProgressModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgCircleProgressModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgCircleProgressModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CircleProgressComponent],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [CircleProgressComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-circle-progress\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule };\n"],"mappings":"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,EAAc,CAAC;IACtHuI,IAAI,EAAE1S,SAAS;IACf6T,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,iBAAiB;MAC3BT,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACgB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEX,IAAI,EAAEjL;IAAsB,CAAC,EAAE;MAAEiL,IAAI,EAAE5S,EAAE,CAACuS;IAAO,CAAC,EAAE;MAAEK,IAAI,EAAE5S,EAAE,CAACwS;IAAW,CAAC,EAAE;MAAEI,IAAI,EAAE5S,EAAE,CAACyS;IAAS,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE/H,OAAO,EAAE,CAAC;MACxKkI,IAAI,EAAEzS;IACV,CAAC,CAAC;IAAEwM,IAAI,EAAE,CAAC;MACPiG,IAAI,EAAExS;IACV,CAAC,CAAC;IAAEiH,KAAK,EAAE,CAAC;MACRuL,IAAI,EAAExS;IACV,CAAC,CAAC;IAAEgD,kBAAkB,EAAE,CAAC;MACrBwP,IAAI,EAAExS;IACV,CAAC,CAAC;IAAEyH,eAAe,EAAE,CAAC;MAClB+K,IAAI,EAAExS;IACV,CAAC,CAAC;IAAE0H,2BAA2B,EAAE,CAAC;MAC9B8K,IAAI,EAAExS;IACV,CAAC,CAAC;IAAE2H,iBAAiB,EAAE,CAAC;MACpB6K,IAAI,EAAExS;IACV,CAAC,CAAC;IAAE4H,gBAAgB,E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}